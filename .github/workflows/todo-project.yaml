name: TODO project application
on:
  push:
    branches-ignore:
      - master
    paths:
      - .github/workflows/todo-project.yaml
      - todo-project/**
env:
  PROJECT_ID: devops-with-kubernetes-291121
  GKE_CLUSTER: dwk-cluster
  GKE_ZONE: europe-north1-b
  FRONTEND_IMAGE: k8s-school-todo-project-frontend
  API_IMAGE: k8s-school-todo-project-api
jobs:
  build-and-push:
    name: Build and push application
    runs-on: ubuntu-latest
    steps:
      - name: Set output
        id: vars
        run: echo "::set-output name=branch::$(echo -n "${GITHUB_REF#refs/*/}" | sed -e 's/[^a-zA-Z0-9-]/-/g' | tr '[:upper:]' '[:lower:]')"
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: buildx-${{ github.sha }}
          restore-keys: buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          export_default_credentials: true
      - name: Init Cloud SDK
        run: |
          gcloud --quiet auth configure-docker
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
      - name: Build and push frontend
        uses: docker/build-push-action@v2
        with:
          context: todo-project/frontend
          push: true
          tags: |
            2kai/${{ env.FRONTEND_IMAGE }}:${{ steps.vars.outputs.branch }}
            2kai/${{ env.FRONTEND_IMAGE }}:latest
            gcr.io/${{ env.PROJECT_ID }}/${{ env.FRONTEND_IMAGE }}:${{ steps.vars.outputs.branch }}-${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      - name: Build and push api
        uses: docker/build-push-action@v2
        with:
          context: todo-project/api
          push: true
          tags: |
            2kai/${{ env.API_IMAGE }}:${{ steps.vars.outputs.branch }}
            2kai/${{ env.API_IMAGE }}:latest
            gcr.io/${{ env.PROJECT_ID }}/${{ env.API_IMAGE }}:${{ steps.vars.outputs.branch }}-${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v1
      - name: Decrypt secrets
        run: |
          curl -L https://github.com/mozilla/sops/releases/download/v3.7.1/sops_3.7.1_amd64.deb -o sops_3.7.1_amd64.deb && sudo dpkg -i sops_3.7.1_amd64.deb
          sops --decrypt --in-place todo-project/manifests/postgres-secret.yaml
      - name: Deploy
        run: |
          cd todo-project
          kubectl create namespace "${{ steps.vars.outputs.branch }}" || true
          kubectl config set-context --current --namespace="${{ steps.vars.outputs.branch }}"
          kustomize edit set namespace "${{ steps.vars.outputs.branch }}"
          kustomize edit set image gcr.io/devops-with-kubernetes-291121/k8s-school-todo-project-frontend=gcr.io/"$PROJECT_ID"/"$FRONTEND_IMAGE":"${{ steps.vars.outputs.branch }}"-$GITHUB_SHA
          kustomize edit set image gcr.io/devops-with-kubernetes-291121/k8s-school-todo-project-api=gcr.io/"$PROJECT_ID"/"$API_IMAGE":"${{ steps.vars.outputs.branch }}"-$GITHUB_SHA
          kustomize build . | kubectl apply -f -
          kubectl rollout status deployment todo-project-frontend-dep
          kubectl rollout status deployment todo-project-api-dep
          kubectl get deploy -o wide
          kubectl get services -o wide
          kubectl get ing -o wide
